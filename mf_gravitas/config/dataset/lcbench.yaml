# FIXME: make this dependent on the output from the raw transformation

preprocessed_path: /some/path
split: 0.8

dataset_meta_features:
  _target_: mf_gravitas.data.preprocessings.transformpipeline.TransformPipeline
  # path: some/path - we might want to automate and structure it
  modulelist:
    - _target_: mf_gravitas.data.preprocessings.nan_transforms.Zero_fill
    - _target_: mf_gravitas.data.preprocessings.table_transforms.ToTensor

algo_meta_features:
  _target_: mf_gravitas.data.preprocessings.transformpipeline.TransformPipeline
  # path: some/path - we might want to automate and structure it
  modulelist:
    - _target_: mf_gravitas.data.preprocessings.nan_transforms.Zero_fill
    - _target_: mf_gravitas.data.preprocessings.table_transforms.Drop
      columns:
        # Irrelevant features (they are constant all across)
        - 'imputation_strategy'
        - 'learning_rate_scheduler'
        - 'loss'
        - 'network'
        - 'normalization_strategy'
        - 'optimizer'
        - 'activation'
        - 'mlp_shape'
    - _target_: mf_gravitas.data.preprocessings.table_transforms.Replace
      columns:
        - 'num_layers'
      replacedict: { 'True': 1 }
    - _target_: mf_gravitas.data.preprocessings.table_transforms.Convert
      columns:
        - 'num_layers'
      dtype: 'numeric'
    - _target_: mf_gravitas.data.preprocessings.table_transforms.ToTensor

lc_metric: Train/val_accuracy
learning_curves:
  _target_: mf_gravitas.data.preprocessings.transformpipeline.TransformPipeline
  modulelist:
    
    - _target_: mf_gravitas.data.preprocessings.nan_transforms.Column_Mean
    - _target_: mf_gravitas.data.preprocessings.lc_slice.LC_TimeSlice
      slice: 51  
    - _target_: mf_gravitas.data.preprocessings.table_transforms.ToTensor


  # just like above


