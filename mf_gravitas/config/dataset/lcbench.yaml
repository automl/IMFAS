# FIXME: make this dependent on the output from the raw transformation
name: LCBench
preprocessed_path: ../../../data/raw/${dataset.name}  # fixme: is raw what we are going for?
lc_metric: Train/val_accuracy # to be extracted & used (see dataset_raw/lcbench for options)
split: 0.8

dataset_meta_features:
  _target_: mf_gravitas.data.DatasetMetaFeatures
  path: ${dataset.preprocessed_path}/meta_features.csv
  index_col: 0

  # the important part!
  transforms:
    _target_: mf_gravitas.data.preprocessings.transformpipeline.TransformPipeline
    modulelist:
      - _target_: mf_gravitas.data.preprocessings.nan_transforms.Zero_fill
      #- _target_: mf_gravitas.data.preprocessings.table_transforms.Scalar
      - _target_: mf_gravitas.data.preprocessings.table_transforms.ToTensor
      - _target_: mf_gravitas.data.preprocessings.tensor_transforms.ScaleStd

algo_meta_features:
  _target_: mf_gravitas.data.AlgorithmMetaFeatures
  path: ${dataset.preprocessed_path}/config_subset.csv
  index_col: 0 # pd.read argument

  # the important part!
  transforms:
    _target_: mf_gravitas.data.preprocessings.transformpipeline.TransformPipeline
    # path: some/path - we might want to automate and structure it
    modulelist:
      - _target_: mf_gravitas.data.preprocessings.nan_transforms.Zero_fill
      #- _target_: mf_gravitas.data.preprocessings.table_transforms.Scalar
      - _target_: mf_gravitas.data.preprocessings.table_transforms.Drop
        columns:
          # Irrelevant features (they are constant all across)
          - 'imputation_strategy'
          - 'learning_rate_scheduler'
          - 'loss'
          - 'network'
          - 'normalization_strategy'
          - 'optimizer'
          - 'activation'
          - 'mlp_shape'
      - _target_: mf_gravitas.data.preprocessings.table_transforms.Replace
        columns:
          - 'num_layers'
        replacedict: { 'True': 1 }
      - _target_: mf_gravitas.data.preprocessings.table_transforms.Convert
        columns:
          - 'num_layers'
        dtype: 'numeric'
      - _target_: mf_gravitas.data.preprocessings.table_transforms.ToTensor
      - _target_: mf_gravitas.data.preprocessings.tensor_transforms.ScaleStd
      


learning_curves:
  _target_: mf_gravitas.data.Dataset_LC
  path: ${dataset.preprocessed_path}/logs_subset.h5

  # the important part!
  transforms:
    _target_: mf_gravitas.data.preprocessings.transformpipeline.TransformPipeline
    modulelist:
      - _target_: mf_gravitas.data.preprocessings.nan_transforms.Column_Mean
      # - _target_: mf_gravitas.data.preprocessings.table_transforms.Scalar
      - _target_: mf_gravitas.data.preprocessings.lc_slice.LC_TimeSlice
        slice: 40
      - _target_: mf_gravitas.data.preprocessings.table_transforms.ToTensor
  metric: ${dataset.lc_metric}

  # just like above


