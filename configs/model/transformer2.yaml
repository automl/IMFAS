_target_: imfas.models.transformer2.IMFASTransformerMLP


dataset_metaf_encoder:
  _target_: imfas.utils.mlp.MLP
  hidden_dims:
    - ${dynamically_computed.n_data_meta_features}
    - 100

positional_encoder:
  _target_: imfas.utils.positionalencoder.PositionalEncoder
  d_model: 51 # n_fidelities
  max_len: 171
  dropout: 0.1

transformer_encoder:
  _target_: torch.nn.TransformerEncoder
  num_layers: 2 # how many transformer layers to stack
  encoder_layer:
    _target_: torch.nn.TransformerEncoderLayer
    d_model: 50  # number of algorithms
    nhead: 10 # attention heads  d_model / nhead = 10 must be devisible
    dim_feedforward: 100
    dropout: 0.1
    activation: relu

    batch_first: True
    norm_first: False
    device: ${device}

  norm:
    _target_: torch.nn.LayerNorm
    normalized_shape: 50

decoder:
  _target_: imfas.utils.mlp.MLP
  hidden_dims:
    - 100  # n_d_metaf_encoding_dim + transformer output dim
    - ${dynamically_computed.n_algos}


device: ${device}