dataset_raw:
  dataset_name: LCBench
  dir_data: ../../../data/
  extract: data_2k
  enable: false
  re_download: false
  reload_from_downloads: false
  selection:
    metric: final_test_cross_entropy
    algo:
      _target_: mf_gravitas.data.ensemble.topk.ensemble
      k: 3
  learning_curves:
    metrics:
    - Train/loss
    - Train/lr
    - Train/test_balanced_accuracy
    - Train/test_cross_entropy
    - Train/test_result
    - Train/train_accuracy
    - Train/train_balanced_accuracy
    - Train/train_cross_entropy
    - Train/val_accuracy
    - Train/val_balanced_accuracy
    - Train/val_cross_entropy
    - epoch
    - time
dataset:
  name: LCBench
  preprocessed_path: ../../../data/raw/${dataset.name}
  lc_metric: Train/val_accuracy
  split: 0.8
  algo_meta:
    _target_: mf_gravitas.data.AlgorithmMetaFeatures
    path: ${dataset.preprocessed_path}/config_subset.csv
    index_col: 0
    transforms:
      _target_: mf_gravitas.data.preprocessings.transformpipeline.TransformPipeline
      modulelist:
      - _target_: mf_gravitas.data.preprocessings.nan_transforms.Zero_fill
      - _target_: mf_gravitas.data.preprocessings.table_transforms.Drop
        columns:
        - imputation_strategy
        - learning_rate_scheduler
        - loss
        - network
        - normalization_strategy
        - optimizer
        - activation
        - mlp_shape
      - _target_: mf_gravitas.data.preprocessings.table_transforms.Replace
        columns:
        - num_layers
        replacedict:
          'True': 1
      - _target_: mf_gravitas.data.preprocessings.table_transforms.Convert
        columns:
        - num_layers
        dtype: numeric
      - _target_: mf_gravitas.data.preprocessings.table_transforms.ToTensor
      - _target_: mf_gravitas.data.preprocessings.tensor_transforms.ScaleStd
  dataset_meta:
    _target_: mf_gravitas.data.DatasetMetaFeatures
    path: ${dataset.preprocessed_path}/meta_features.csv
    index_col: 0
    transforms:
      _target_: mf_gravitas.data.preprocessings.transformpipeline.TransformPipeline
      modulelist:
      - _target_: mf_gravitas.data.preprocessings.nan_transforms.Zero_fill
      - _target_: mf_gravitas.data.preprocessings.table_transforms.ToTensor
      - _target_: mf_gravitas.data.preprocessings.tensor_transforms.ScaleStd
  lc:
    _target_: mf_gravitas.data.Dataset_LC
    path: ${dataset.preprocessed_path}/logs_subset.h5
    transforms:
      _target_: mf_gravitas.data.preprocessings.transformpipeline.TransformPipeline
      modulelist:
      - _target_: mf_gravitas.data.preprocessings.nan_transforms.Column_Mean
      - _target_: mf_gravitas.data.preprocessings.lc_slice.LC_TimeSlices
        slices:
        - 20
        - 30
        - 51
    metric: ${dataset.lc_metric}
model:
  model:
    _target_: mf_gravitas.models.rank_mlp.AlgoRankMLP_Ensemble
    shared_hidden_dims:
    - 300
    - 200
    n_fidelities: 2
    multi_head_dims:
    - 100
    fc_dim:
    - 58
evaluation:
  steps: 10
  evaluator:
    _target_: mf_gravitas.evaluation.optimal_rankings.ZeroShotOptimalDistance
    ranking_loss:
      _target_: sklearn.metrics.ndcg_score
    batch: 20
    scaler:
      _target_: sklearn.preprocessing.MinMaxScaler
training:
  schedule:
    _target_: mf_gravitas.trainer.rank_trainer.train_ensemble
    epochs: 1000
    lr: ${lr}
seed: 0
output_dir: ./tmp
num_competitors: 1
num_workers: 2
train_batch_size: 1
test_batch_size: 1
lr: 0.001
shuffle: true
wandb:
  id: null
  entity: tnt
  project: gravitas
  mode: onfline
  job_type: train
  tags: []
  notes: This is a run for mlp ranking ensemble
  group: rank_ensemble
  sync_tensorboard: false
  save_code: false
  resume: allow
